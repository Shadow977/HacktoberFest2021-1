#include "bits/stdc++.h"
using namespace std;
 
int LCS(string& S, int N, string& T, int M,
        vector<vector<int> >& dp)
{
    if (N == 0 or M == 0)
        return 0;
    if (dp[N][M] != -1)
        return dp[N][M];
    if (S[N - 1] == T[M - 1]) {
        return dp[N][M] = 1 + LCS(S, N - 1, T, M - 1, dp);
    }
    return dp[N][M] = max(LCS(S, N - 1, T, M, dp),
                          LCS(S, N, T, M - 1, dp));
}
 

int solve(string S)
{
 
    string T = "abcdefghijklmnopqrstuvwxyz";
    int N = S.length(), M = T.length();
    vector<vector<int> > dp(N + 1, vector<int>(M + 1, -1));
    return (26 - LCS(S, N, T, M, dp));
}
 
